name: OpenCV CUDA

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 0 1 * *"
  workflow_dispatch:

jobs:
  build-ubuntu18_04:
    name: Build OpenCV ${{matrix.opencv}} with CUDA ${{matrix.cuda}} on Ubuntu 18.04
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cuda: [ 11.0.3, 11.3.1 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push OpenCV CUDA to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          cache-from: type=registry,ref=thecanadianroot/opencv-cuda:ubuntu18.04-cuda${{matrix.cuda}}-opencv3.4.14
          cache-to: type=inline
          tags: |
            thecanadianroot/opencv-cuda:ubuntu18.04-cuda${{matrix.cuda}}-opencv3.4.14
          build-args: |
            UBUNTU=18.04
            CUDA=${{matrix.cuda}}
            OPENCV=3.4.14
      
      - name: Build and Push OpenCV CUDA ROS to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.ros-melodic
          push: true
          cache-from: type=registry,ref=thecanadianroot/opencv-cuda:ubuntu18.04-cuda${{matrix.cuda}}-opencv3.4.14-rosmelodic
          cache-to: type=inline
          tags: |
            thecanadianroot/opencv-cuda:ubuntu18.04-cuda${{matrix.cuda}}-opencv3.4.14-rosmelodic
          build-args: |
            UBUNTU=18.04
            CUDA=${{matrix.cuda}}
            OPENCV=3.4.14

  build-ubuntu20_04:
    name: Build OpenCV ${{matrix.opencv}} with CUDA ${{matrix.cuda}} on Ubuntu 20.04
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cuda: [ 11.3.1 ]
        opencv: [ 4.5.2 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push OpenCV CUDA to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          cache-from: type=registry,ref=thecanadianroot/opencv-cuda:ubuntu20.04-cuda${{matrix.cuda}}-opencv${{matrix.opencv}}
          cache-to: type=inline
          tags: |
            thecanadianroot/opencv-cuda:ubuntu20.04-cuda${{matrix.cuda}}-opencv${{matrix.opencv}}
            thecanadianroot/opencv-cuda:latest
          build-args: |
            UBUNTU=20.04
            CUDA=${{matrix.cuda}}
            OPENCV=${{matrix.opencv}}

      - name: Build and Push OpenCV CUDA ROS to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.ros-noetic
          push: true
          cache-from: type=registry,ref=thecanadianroot/opencv-cuda:ubuntu20.04-cuda${{matrix.cuda}}-opencv${{matrix.opencv}}rosnoetic
          cache-to: type=inline
          tags: |
            thecanadianroot/opencv-cuda:ubuntu20.04-cuda${{matrix.cuda}}-opencv${{matrix.opencv}}-rosnoetic
            thecanadianroot/opencv-cuda:ros-latest
          build-args: |
            UBUNTU=20.04
            CUDA=${{matrix.cuda}}
            OPENCV=${{matrix.opencv}}
